////
/// Layout dialog
///
/// @group layouts
/// @author Ulrich Merkel
////

$block: '#{$config-ns}l-dialog';

// Above the fold css, visible without scrolling
@if ($config-critical-css) {

    .#{$block},
    [class^='#{$block}--'],
    [class*=' #{$block}--'] {
        position: fixed;
        top: 0;
        right: 0;
        bottom: 0;
        left: 0;
        z-index: 10;
        display: block;
        width: auto;
        max-width: 100%;
        height: auto;
        margin: 0 auto;
        padding: 0;
        -webkit-overflow-scrolling: touch;
        overflow-x: hidden;
        overflow-y: scroll;
        background: transparent;
        contain: layout;

        will-change: opacity;
        transition: opacity $config-transition-arguments-slow;
    }

    .#{$block}__content {
        position: relative;
        z-index: 11;
        padding-top: rem-calc($config-grid--gutter * 2.5);
        padding-bottom: rem-calc($config-grid--gutter * 2.5);

        .m-article__headline,
        .m-article__alt-headline,
        .m-article__lead,
        .m-article__text {
            @include var(color, --theme-layout-dialog-text-color);
        }

    }

    .#{$block}__background {
        position: fixed;
        top: 0;
        right: 0;
        bottom: 0;
        left: 0;
        z-index: 9;
        width: 100%;
        height: 100%;
        @include var(background, --theme-layout-dialog-background-background);
        @include var(opacity, --theme-layout-dialog-background-opacity);
    }

    .#{$block}__button--close {
        // stylelint-disable declaration-no-important
        position: absolute !important;
        // stylelint-enable declaration-no-important
        top: 0;
        right: 0;
        z-index: 12;
        width: 61px;
        height: 61px;
        // stylelint-disable declaration-no-important
        padding: 13px 0 0 5px !important;
        // stylelint-enable declaration-no-important
        font-size: 130%;
        line-height: 2.5;
        @include var(color, --theme-layout-dialog-button-close-color);
        text-align: center;
        letter-spacing: normal;
        @include var(background, --theme-layout-dialog-button-close-background);

        &:visited {
            @include var(color, --theme-layout-dialog-button-close-color-visited);
        }

        // Just show hover for non-touch devices
        @if ($config-support-hovers) {
            .no-touch &:hover,
            .no-touchevents &:hover,
            .no-js &:hover {
                @include var(background, --theme-layout-dialog-button-close-background-hover);

            }
        }

        &:focus {
            @include var(color, --theme-layout-dialog-button-close-color-focus);
        }

        &::before {
            position: relative;
            top: -4px;
            display: inline-block;
            vertical-align: middle;
        }

        @include breakpoint($config-grid--breakpoint-xsmall) {
            display: block;
        }
    }

    .#{$block}--loading {
        z-index: 1000;
        perspective: 800px;

        .#{$block}__content {
            display: block;
            width: 100%;
            height: 100%;
            margin: 0;
        }

        .#{$block}__background {
            opacity: 1;
        }

    }

}

// Below the fold css, could be lazy loaded
@if ($config-non-critical-css) {

    @keyframes anim-open {
        0% {
            opacity: 0;
            transform: scale3d(1.1, 1.1, 1);
        }

        100% {
            opacity: 1;
            transform: scale3d(1, 1, 1);
        }
    }

    @keyframes anim-close {
        0% {
            opacity: 1;
        }

        100% {
            opacity: 0;
            transform: scale3d(0.9, 0.9, 1);
        }
    }

    .#{$block},
    [class^='#{$block}--'],
    [class*=' #{$block}--'] {
        display: block;
        visibility: visible;
        opacity: 1;
        animation-fill-mode: forwards;
        animation-duration: 0.3s;

        &.animate-enter {
            visibility: visible;

            &.animate-enter-active {
                animation-name: anim-open;
            }
        }

        &.animate-leave {
            &.animate-leave-active {
                animation-name: anim-close;
            }
        }

        &.animate-appear {
            visibility: visible;

            &.animate-appear-active {
                animation-name: anim-open;
            }
        }
    }

    .#{$block}--loading {
        // stylelint-disable declaration-no-important
        display: none !important;
        // stylelint-enable declaration-no-important
    }

    .#{$block} {
        .m-article--broadcast {
            margin-top: 0;

            a.c-btn {
                display: none;
            }
        }

        .m-list--broadcast {
            .m-list__item {

                // just show hover for non-touch devices
                @if ($config-support-hovers) {
                    .no-touch &,
                    .no-touchevents &,
                    .no-js & {
                        a {
                            &:hover {
                                @include var(color, --theme-layout-dialog-text-color);
                            }
                        }
                    }
                }

            }

            .m-list__alt-headline {
                @include var(color, --theme-layout-dialog-text-color);
            }
        }
    }

    .#{$block}--search {
        .m-form__control--text {
            @include var(color, --theme-layout-dialog-text-color);
            @include var(background, --theme-layout-dialog-search-input-background);
        }

        .c-type--h3 {
            @include var(color, --theme-layout-dialog-text-color);
        }

        .m-menu__item {
            // Just show hover for non-touch devices
            @if ($config-support-hovers) {
                .no-touch &,
                .no-touchevents &,
                .no-js & {
                    &:hover {
                        @include var(color, --theme-layout-dialog-text-color);
                    }
                }
            }
        }

        .c-btn {
            @include breakpoint($config-grid--breakpoint-xsmall) {
                display: block;
                margin: 0 auto;
            }
        }

        .m-menu__description {
            @include var(color, --theme-layout-dialog-text-color);
        }
    }
}
